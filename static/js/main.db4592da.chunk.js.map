{"version":3,"sources":["components/Navbar.js","components/TodoList.js","actions/index.js","components/Form.js","reducers/index.js","reducers/HandleTodoReducer.js","reducers/FilterReducers.js","index.js"],"names":["Navbar","title","className","connect","state","todos","removeItem","item","type","payload","toggleTodoStatus","props","todo","completed","text","id","onClick","filteredTodos","reducedTodos","addItem","filterTodo","filterType","todoList","useState","currentText","setCurrentText","selectRef","useRef","useEffect","current","value","onChange","e","target","Math","random","ref","name","map","combineReducers","action","filter","ReactDOM","render","StrictMode","store","createStore","reducers","document","getElementById"],"mappings":"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","file":"static/js/main.db4592da.chunk.js","sourcesContent":["import React from 'react';\nimport './Navbar.styles.css';\nconst Navbar = ({ title }) => {\n    return (\n        <nav className=\"navbar navbar-dark bg-dark\">\n            <h4 className=\"app-heading mt-2\">{title}</h4>\n        </nav>\n    )\n}\n\nexport default Navbar;","import React from 'react';\nimport './TodoList.styles.css';\nimport { removeItem, toggleTodoStatus } from '../actions/index';\nimport { connect } from 'react-redux';\nconst TodoList = (props) => {\n\n    return (\n        <div className=\"todo-item mt-2 mb-2\" key={`item-${props.todo.id}`}>\n            <li className=\"list-group-item\" key={props.todo.id}>\n                <span\n                    className={`${props.todo.completed ? 'completed' : ''} `}\n                    key={`spn-${props.todo.id}`}>{props.todo.text}\n                </span>\n                <div className=\"wrapper\" key={`wrapper-${props.todo.id}`}>\n                    <button type=\"button\"\n                        onClick={() => props.toggleTodoStatus(props.todo)}\n                        key={`toggle-${props.todo.id}`} className=\"btn btn-info button-align mr-5\">\n                        Completed\n                    </button>\n                    <button\n                        type=\"button\"\n                        onClick={() => props.removeItem(props.todo)}\n                        key={`del-${props.todo.id}`}\n                        className=\"btn btn-danger button-align\">\n                        Delete\n                    </button>\n                </div>\n            </li>\n        </div>\n    )\n}\nconst mapStateToProps = (state) => {\n    return { todos: state.todos }\n}\nexport default connect(mapStateToProps, {\n    removeItem,\n    toggleTodoStatus\n})(TodoList);","export const addItem = (item) => {\n    return {\n        type: 'ADD_TODO',\n        payload: item\n    }\n}\n\nexport const removeItem = (item) => {\n    return {\n        type: 'REMOVE_TODO',\n        payload: item\n    }\n}\n\nexport const toggleTodoStatus = (item) => {\n    return {\n        type: 'TOGGLE_TODO_STATUS',\n        payload: item\n    }\n}\n\nexport const filterTodo = (filterType, todoList) => {\n    return {\n        type: filterType,\n        payload: todoList\n\n    }\n}","import React, { useState, useRef, useEffect } from 'react';\nimport './Form.styles.css';\nimport TodoList from './TodoList';\nimport { connect } from 'react-redux';\nimport { addItem, filterTodo } from '../actions';\nconst Form = (props) => {\n    const [currentText, setCurrentText] = useState(\"\");\n    const selectRef = useRef();\n    const submitHandler = () => {\n        props.addItem({ text: currentText, id: Math.random() * 10000, completed: false });\n        setCurrentText(\"\");\n    }\n\n    useEffect(() => {\n        props.filterTodo(selectRef.current.value, props.todos)\n    }, [props.todos])\n    \n    const filterHandler = (e) => {\n        props.filterTodo(e.target.value, props.todos)\n    }\n\n    return (\n        <div className=\"container mt-4\">\n            <h2>ADD LISTS</h2>\n            <div className=\"d-flex list-section mt-4\">\n                <input value={currentText} onChange={(e) => setCurrentText(e.target.value)} type=\"text\" className=\"form-control w-25\" />\n                <button type=\"submit\" onClick={submitHandler} className=\"btn btn-primary ml-3 mb-2\"> Submit </button>\n                <select ref={selectRef} onChange={filterHandler} name=\"todos\" className=\"filter-todo selectOption\">\n                    <option value=\"All\">All</option>\n                    <option value=\"Completed\">Completed</option>\n                    <option value=\"Incomplete\">Incomplete</option>\n                </select>\n            </div>\n            <div className=\"todo-item-section\">\n                {\n                    props.filteredTodos.map((item) => {\n                        return <TodoList key={`form-${item.id}`} todo={item} />\n\n                    })\n                }\n            </div>\n\n        </div>\n    )\n\n}\n\nconst mapStateToProps = (state) => {\n    return { todos: state.todos, filteredTodos: state.reducedTodos }\n}\n\nexport default connect(mapStateToProps, {\n    addItem,\n    filterTodo\n})(Form)\n","import { combineReducers } from 'redux';\n\nimport HandleTodoReducer from './HandleTodoReducer';\nimport filteredTodos from './FilterReducers';\n\nexport default combineReducers({\n    todos: HandleTodoReducer,\n    reducedTodos: filteredTodos\n})","export default (state=[], action) => {\n    switch (action.type) {\n        case 'ADD_TODO':\n            return [...state, action.payload]\n        case 'REMOVE_TODO':\n            return state.filter((item) => item.id !== action.payload.id)\n        case 'TOGGLE_TODO_STATUS':\n            return state.map((item) => {\n                if (item.id === action.payload.id) {\n                    return { ...item, completed: !(item.completed) }\n                }\n                else {\n                    return item;\n                }\n            })\n        default:\n            return state;\n    }\n}","export default (state = [], action) => {\n    switch (action.type) {\n        case 'All':\n            return [...action.payload]\n        case 'Completed':\n            return action.payload.filter((item) => (item.completed))\n        case 'Incomplete':\n            return action.payload.filter((item) => !(item.completed))\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Navbar from './components/Navbar';\nimport Form from './components/Form';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport reducers from './reducers';\nReactDOM.render(\n  <React.StrictMode>\n    <Navbar title=\"TODO-REDUX\" />\n    <Provider store={createStore(reducers)}>\n      <Form />\n    </Provider>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}